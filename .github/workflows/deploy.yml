name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install

      # - name: ⎔ Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      # - name: 📥 Download deps
      #   uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: bun run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install

      # - name: ⎔ Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      # - name: 📥 Download deps
      #   uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: bun run typecheck

  build:
    name: 🐳 build
    uses: ./.github/workflows/build.yml
    secrets: inherit
  deploy:
    name: 🚀 Deploy
    runs-on: [self-hosted]
    needs: [lint, typecheck, build]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    # env:
    #   APP_ENV: ${{ secrets.APP_ENV }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 🚀 Run Docker Compose on Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        env:
          APP_ENV: ${{ secrets.APP_ENV_STAGING }}
        run: |
          docker pull varkoff/deployed-app:latest
          docker compose -f docker-compose.staging.yaml up -d
          docker system prune --all --volumes --force

      - name: 🚀 Run Docker Compose on Production
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          APP_ENV: ${{ secrets.APP_ENV }}
        run: |
          docker pull varkoff/deployed-app:production
          docker compose -f docker-compose.yaml up -d
          docker system prune --all --volumes --force
